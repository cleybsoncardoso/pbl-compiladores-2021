1 PRE const
1 DEL {
2 PRE real
2 IDE a
2 REL =
2 NRO 2
2 DEL ,
2 IDE b
2 REL =
2 NRO 4
2 DEL ,
2 IDE c
2 REL =
2 NRO 3
2 DEL ;
3 PRE boolean
3 IDE teste
3 REL =
3 PRE false
3 DEL ;
4 PRE int
4 IDE x
4 REL =
4 NRO 4
4 DEL ;
5 PRE int
5 IDE a
5 DEL [
5 NRO 1
5 DEL ]
5 REL =
5 DEL {
5 NRO 2
5 DEL ,
5 NRO 3
5 DEL }
5 DEL ;
6 DEL }
7 PRE var
7 DEL {
8 PRE real
8 IDE a
8 DEL ,
8 IDE b
8 DEL ,
8 IDE c
8 REL =
8 NRO 3
8 DEL ;
9 PRE boolean
9 IDE teste
9 REL =
9 PRE false
9 DEL ;
10 PRE int
10 IDE x
10 DEL ;
11 PRE int
11 IDE a
11 DEL [
11 NRO 1
11 DEL ]
11 REL =
11 DEL {
11 NRO 2
11 DEL ,
11 NRO 3
11 DEL }
11 DEL ;
12 PRE int
12 IDE a
12 DEL [
12 NRO 1
12 DEL ]
12 DEL [
12 NRO 2
12 DEL ]
12 REL =
12 NRO 2
12 DEL ;
13 PRE int
13 IDE a
13 DEL [
13 NRO 1
13 DEL ]
13 DEL ;
14 PRE int
14 IDE a
14 DEL [
14 NRO 1
14 DEL ]
14 DEL [
14 NRO 2
14 DEL ]
14 DEL ;
15 DEL }
16 PRE struct
16 IDE Carro
16 DEL {
17 PRE string
17 IDE placa
17 DEL ;
18 PRE string
18 IDE modelo
18 DEL ;
19 PRE int
19 IDE qtd_portas
19 DEL ,
19 IDE qtd_valvulas
19 DEL ;
20 PRE real
20 IDE velocidade_max
20 REL =
20 NRO 125.0
20 DEL ;
21 DEL }
22 PRE procedure
22 IDE acelerar
22 DEL (
22 PRE real
22 IDE velocidade
22 DEL )
22 DEL {
23 PRE var
23 DEL {
24 PRE real
24 IDE a
24 DEL ,
24 IDE b
24 DEL ,
24 IDE c
24 REL =
24 NRO 3
24 DEL ;
25 PRE boolean
25 IDE teste
25 REL =
25 PRE false
25 DEL ;
26 PRE int
26 IDE x
26 DEL ;
27 PRE struct
27 IDE Carro
27 IDE carro
27 DEL ;
28 DEL }
29 PRE global
29 DEL .
29 IDE a
29 REL =
29 NRO 12
29 DEL ;
30 PRE local
30 DEL .
30 IDE a
30 REL =
30 NRO 15
30 DEL ;
31 IDE b
31 REL =
31 NRO 18
31 DEL ;
32 IDE j
32 REL =
32 CAD "hello"
32 DEL ;
33 IDE vetor1
33 DEL [
33 NRO 1
33 DEL ]
33 DEL ;
34 IDE vetor1
34 DEL [
34 NRO 1
34 DEL ]
34 DEL [
34 NRO 2
34 DEL ]
34 DEL ;
35 IDE vetor1
35 DEL [
35 NRO 1
35 DEL ]
35 DEL [
35 NRO 2
35 DEL ]
35 REL =
35 IDE b
35 DEL ;
36 IDE vetor1
36 DEL [
36 NRO 1
36 DEL ]
36 DEL [
36 IDE b
36 DEL ]
36 REL =
36 NRO 5
36 DEL ;
37 IDE vetor1
37 DEL [
37 NRO 1
37 DEL ]
37 REL =
37 NRO 10
37 DEL ;
38 IDE vetor2
38 DEL [
38 IDE b
38 DEL ]
38 REL =
38 DEL {
38 IDE b
38 DEL ,
38 IDE j
38 DEL }
38 DEL ;
39 IDE vetor2
39 DEL [
39 IDE b
39 DEL ]
39 REL =
39 DEL {
39 IDE b
39 DEL }
39 DEL ;
40 PRE if
40 DEL (
40 IDE b
40 REL >
40 IDE c
40 LOG ||
40 IDE c
40 REL >
40 IDE a
40 LOG &&
40 IDE a
40 REL >
40 IDE b
40 DEL )
40 PRE then
40 DEL {
41 IDE carro
41 DEL .
41 IDE velocidade
41 REL =
41 NRO 200
41 DEL ;
42 PRE if
42 DEL (
42 IDE carro
42 DEL .
42 IDE placa
42 REL ==
42 CAD "jjj"
42 DEL )
42 PRE then
42 DEL {
43 IDE carro
43 DEL .
43 IDE modelo
43 REL =
43 CAD "xesquedele"
43 DEL ;
44 DEL }
44 PRE else
44 DEL {
45 IDE ligado
45 DEL (
45 IDE c
45 DEL ,
45 NRO 5
45 ART +
45 NRO 2
45 DEL ,
45 CAD "bom dia"
45 DEL ,
45 PRE true
45 DEL )
45 DEL ;
46 DEL }
47 DEL }
48 IDE acelerar
48 DEL (
48 IDE x
48 DEL )
48 DEL ;
50 PRE while
50 DEL (
50 IDE b
50 REL >
50 IDE c
50 LOG &&
50 IDE c
50 REL >
50 IDE a
50 LOG &&
50 IDE a
50 REL >
50 IDE b
50 DEL )
50 DEL {
51 IDE carro
51 DEL .
51 IDE velocidade
51 REL =
51 NRO 200
51 DEL ;
52 PRE while
52 DEL (
52 IDE carro
52 DEL .
52 IDE placa
52 REL ==
52 CAD "jjj"
52 DEL )
52 DEL {
53 IDE carro
53 DEL .
53 IDE modelo
53 REL =
53 CAD "xesquedele"
53 DEL ;
54 DEL }
55 PRE while
55 DEL (
55 PRE true
55 DEL )
55 DEL {
56 IDE ligado
56 DEL (
56 IDE c
56 DEL ,
56 NRO 5
56 ART +
56 NRO 2
56 DEL ,
56 CAD "bom dia"
56 DEL ,
56 PRE true
56 DEL )
56 DEL ;
57 PRE print
57 DEL (
57 CAD "loop inf"
57 DEL ,
57 IDE a
57 DEL ,
57 IDE a
57 ART +
57 IDE b
57 DEL ,
57 NRO 2
57 ART +
57 IDE a
57 DEL ,
57 IDE acelerar
57 DEL (
57 IDE x
57 DEL )
57 DEL ,
57 IDE acelerar
57 DEL (
57 IDE x
57 DEL )
57 ART +
57 IDE j
57 DEL )
57 DEL ;
58 PRE read
58 DEL (
58 IDE a
58 DEL )
58 DEL ;
59 DEL }
60 DEL }
61 DEL }
63 PRE function
63 PRE boolean
63 IDE ligado
63 DEL (
63 PRE boolean
63 IDE ligado
63 DEL ,
63 PRE string
63 IDE nome
63 DEL ,
63 PRE int
63 IDE ano
63 DEL )
63 DEL {
64 PRE var
64 DEL {
65 PRE real
65 IDE a
65 DEL ,
65 IDE b
65 DEL ,
65 IDE c
65 REL =
65 NRO 3
65 DEL ;
66 PRE boolean
66 IDE teste
66 REL =
66 PRE false
66 DEL ;
67 PRE int
67 IDE x
67 DEL ;
68 PRE struct
68 IDE Carro
68 IDE carro
68 DEL ;
69 DEL }
70 IDE b
70 REL =
70 NRO 18
70 DEL ;
71 IDE c
71 REL =
71 ART -
71 NRO 3
71 DEL ;
72 IDE j
72 REL =
72 CAD "hello"
72 DEL ;
73 PRE if
73 DEL (
73 IDE b
73 REL >
73 IDE c
73 LOG &&
73 IDE c
73 REL <=
73 IDE a
73 LOG &&
73 IDE a
73 REL !=
73 IDE b
73 DEL )
73 PRE then
73 DEL {
74 IDE carro
74 DEL .
74 IDE velocidade
74 REL =
74 NRO 200
74 DEL ;
75 PRE if
75 DEL (
75 IDE carro
75 DEL .
75 IDE placa
75 REL ==
75 CAD "jjj"
75 DEL )
75 PRE then
75 DEL {
76 IDE carro
76 DEL .
76 IDE modelo
76 REL =
76 CAD "xesquedele"
76 DEL ;
77 DEL }
77 PRE else
77 DEL {
78 IDE ligado
78 DEL (
78 IDE c
78 DEL ,
78 NRO 5
78 ART +
78 NRO 2
78 DEL ,
78 CAD "bom dia"
78 DEL ,
78 PRE true
78 DEL )
78 DEL ;
79 DEL }
80 DEL }
81 IDE acelerar
81 DEL (
81 IDE x
81 DEL )
81 DEL ;
82 PRE return
82 PRE true
82 DEL ;
83 DEL }
85 PRE typedef
85 PRE struct
85 IDE Uno
85 PRE extends
85 IDE Carro
85 DEL {
86 DEL }
88 PRE start
88 DEL (
88 DEL )
88 DEL {
89 PRE var
89 DEL {
90 PRE real
90 IDE a
90 DEL ,
90 IDE b
90 DEL ,
90 IDE c
90 REL =
90 NRO 3
90 DEL ;
91 PRE boolean
91 IDE teste
91 REL =
91 PRE false
91 DEL ;
92 PRE int
92 IDE x
92 DEL ;
93 PRE struct
93 IDE Carro
93 IDE carro
93 DEL ;
94 DEL }
95 PRE global
95 DEL .
95 IDE a
95 REL =
95 NRO 12
95 DEL ;
96 PRE local
96 DEL .
96 IDE a
96 REL =
96 NRO 15
96 DEL ;
97 IDE b
97 REL =
97 NRO 18
97 DEL ;
98 IDE j
98 REL =
98 CAD "hello"
98 DEL ;
99 PRE if
99 DEL (
99 IDE b
99 REL >
99 IDE c
99 LOG &&
99 IDE c
99 REL >=
99 IDE a
99 LOG &&
99 IDE a
99 REL <
99 IDE b
99 DEL )
99 PRE then
99 DEL {
100 IDE carro
100 DEL .
100 IDE velocidade
100 REL =
100 NRO 200
100 DEL ;
101 PRE if
101 DEL (
101 IDE carro
101 DEL .
101 IDE placa
101 REL ==
101 CAD "jjj"
101 DEL )
101 PRE then
101 DEL {
102 IDE carro
102 DEL .
102 IDE modelo
102 REL =
102 CAD "xesquedele"
102 DEL ;
103 DEL }
103 PRE else
103 DEL {
104 IDE ligado
104 DEL (
104 IDE c
104 ART +
104 IDE b
104 DEL ,
104 IDE a
104 ART +
104 NRO 2
104 DEL ,
104 NRO 5
104 ART +
104 NRO 2
104 DEL ,
104 CAD "bom dia"
104 DEL ,
104 PRE true
104 DEL )
104 DEL ;
105 DEL }
106 DEL }
107 PRE while
107 DEL (
107 IDE b
107 REL >
107 IDE c
107 LOG &&
107 IDE c
107 REL >
107 IDE a
107 LOG &&
107 IDE a
107 REL >
107 IDE b
107 DEL )
107 DEL {
108 IDE carro
108 DEL .
108 IDE velocidade
108 REL =
108 NRO 200
108 DEL ;
109 PRE while
109 DEL (
109 IDE carro
109 DEL .
109 IDE placa
109 REL ==
109 CAD "jjj"
109 DEL )
109 DEL {
110 IDE carro
110 DEL .
110 IDE modelo
110 REL =
110 CAD "xesquedele"
110 DEL ;
111 DEL }
112 PRE while
112 DEL (
112 PRE true
112 DEL )
112 DEL {
113 IDE ligado
113 DEL (
113 IDE c
113 DEL ,
113 NRO 5
113 ART +
113 NRO 2
113 DEL ,
113 CAD "bom dia"
113 DEL ,
113 PRE true
113 DEL )
113 DEL ;
114 PRE print
114 DEL (
114 CAD "loop inf"
114 DEL ,
114 IDE a
114 DEL ,
114 IDE a
114 ART +
114 IDE b
114 DEL ,
114 NRO 2
114 ART +
114 IDE a
114 DEL ,
114 IDE acelerar
114 DEL (
114 IDE x
114 DEL )
114 DEL ,
114 IDE acelerar
114 DEL (
114 IDE x
114 DEL )
114 ART +
114 IDE j
114 DEL )
114 DEL ;
115 PRE read
115 DEL (
115 IDE a
115 DEL )
115 DEL ;
116 DEL }
117 DEL }
118 IDE acelerar
118 DEL (
118 IDE x
118 DEL )
118 DEL ;
119 DEL }
121 PRE struct
121 IDE Carro
121 DEL {
122 PRE string
122 IDE placa
122 DEL ;
123 PRE string
123 IDE modelo
123 DEL ;
124 PRE int
124 IDE qtd_portas
124 DEL ,
124 IDE qtd_valvulas
124 DEL ;
125 PRE real
125 IDE velocidade_max
125 REL =
125 NRO 125.0
125 DEL ;
126 DEL }
128 PRE procedure
128 IDE acelerar
128 DEL (
128 PRE real
128 IDE velocidade
128 DEL )
128 DEL {
129 PRE var
129 DEL {
130 PRE real
130 IDE a
130 DEL ,
130 IDE b
130 DEL ,
130 IDE c
130 REL =
130 NRO 3
130 DEL ;
131 PRE boolean
131 IDE teste
131 REL =
131 PRE false
131 DEL ;
132 PRE int
132 IDE x
132 DEL ;
133 PRE struct
133 IDE Carro
133 IDE carro
133 DEL ;
134 DEL }
135 PRE global
135 DEL .
135 IDE a
135 REL =
135 NRO 12
135 DEL ;
136 PRE local
136 DEL .
136 IDE a
136 REL =
136 NRO 15
136 DEL ;
137 IDE b
137 REL =
137 NRO 18
137 DEL ;
138 IDE j
138 REL =
138 CAD "hello"
138 DEL ;
139 PRE if
139 DEL (
139 IDE b
139 REL >
139 IDE c
139 LOG &&
139 IDE c
139 REL >
139 IDE a
139 LOG &&
139 IDE a
139 REL >
139 IDE b
139 DEL )
139 PRE then
139 DEL {
140 IDE carro
140 DEL .
140 IDE velocidade
140 REL =
140 NRO 200
140 DEL ;
141 PRE if
141 DEL (
141 IDE carro
141 DEL .
141 IDE placa
141 REL ==
141 CAD "jjj"
141 DEL )
141 PRE then
141 DEL {
142 IDE carro
142 DEL .
142 IDE modelo
142 REL =
142 CAD "xesquedele"
142 DEL ;
143 DEL }
143 PRE else
143 DEL {
144 IDE ligado
144 DEL (
144 IDE c
144 DEL ,
144 NRO 5
144 ART +
144 NRO 2
144 DEL ,
144 CAD "bom dia"
144 DEL ,
144 PRE true
144 DEL )
144 DEL ;
145 DEL }
146 DEL }
147 IDE acelerar
147 DEL (
147 IDE x
147 DEL )
147 DEL ;
148 DEL }
150 PRE function
150 PRE boolean
150 IDE ligado
150 DEL (
150 PRE boolean
150 IDE ligado
150 DEL ,
150 PRE string
150 IDE nome
150 DEL ,
150 PRE int
150 IDE ano
150 DEL )
150 DEL {
151 PRE var
151 DEL {
152 PRE real
152 IDE a
152 DEL ,
152 IDE b
152 DEL ,
152 IDE c
152 REL =
152 NRO 3
152 DEL ;
153 PRE boolean
153 IDE teste
153 REL =
153 PRE false
153 DEL ;
154 PRE int
154 IDE x
154 DEL ;
155 PRE struct
155 IDE Carro
155 IDE carro
155 DEL ;
156 DEL }
157 PRE global
157 DEL .
157 IDE a
157 REL =
157 NRO 12
157 DEL ;
158 PRE local
158 DEL .
158 IDE a
158 REL =
158 NRO 15
158 DEL ;
159 IDE b
159 REL =
159 NRO 18
159 DEL ;
160 IDE j
160 REL =
160 CAD "hello"
160 DEL ;
161 PRE if
161 DEL (
161 IDE b
161 REL >
161 IDE c
161 LOG &&
161 IDE c
161 REL <=
161 IDE a
161 LOG &&
161 IDE a
161 REL !=
161 IDE b
161 DEL )
161 PRE then
161 DEL {
162 IDE carro
162 DEL .
162 IDE velocidade
162 REL =
162 NRO 200
162 DEL ;
163 PRE if
163 DEL (
163 IDE carro
163 DEL .
163 IDE placa
163 REL ==
163 CAD "jjj"
163 DEL )
163 PRE then
163 DEL {
164 IDE carro
164 DEL .
164 IDE modelo
164 REL =
164 CAD "xesquedele"
164 DEL ;
165 DEL }
165 PRE else
165 DEL {
166 IDE ligado
166 DEL (
166 IDE c
166 DEL ,
166 NRO 5
166 ART +
166 NRO 2
166 DEL ,
166 CAD "bom dia"
166 DEL ,
166 PRE true
166 DEL )
166 DEL ;
167 DEL }
168 DEL }
169 IDE acelerar
169 DEL (
169 IDE x
169 DEL )
169 DEL ;
170 PRE return
170 PRE true
170 DEL ;
171 DEL }
173 PRE typedef
173 PRE struct
173 IDE Uno
173 PRE extends
173 IDE Carro
173 DEL {
174 DEL }
